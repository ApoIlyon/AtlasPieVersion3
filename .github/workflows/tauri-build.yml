name: Tauri Cross-Platform Build

on:
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest

    env:
      CARGO_TERM_COLOR: always
      RUST_BACKTRACE: 1
      TAURI_SKIP_UPDATE_CHECK: true
      TAURI_TARGET: x86_64-pc-windows-msvc

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: autohotpie-tauri/package-lock.json

      - name: Restore cargo cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            autohotpie-tauri/src-tauri/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('autohotpie-tauri/src-tauri/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Setup Rust
        shell: powershell
        run: |
          rustup update stable --no-self-update
          rustup default stable
          rustup component add clippy rustfmt
          rustup target add $env:TAURI_TARGET

      - name: Install frontend deps
        working-directory: autohotpie-tauri
        run: npm ci

      - name: Build UI
        working-directory: autohotpie-tauri
        run: npm run build

      - name: Build Tauri bundle
        working-directory: autohotpie-tauri
        run: npm run tauri build -- --target $env:TAURI_TARGET

      - name: Smoke test bundle
        working-directory: autohotpie-tauri
        run: |
          npx tauri info
          npm run tauri info

      - name: Upload artifacts
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: tauri-windows
          path: |
            autohotpie-tauri/src-tauri/target/**/*.msi
            autohotpie-tauri/src-tauri/target/**/*.exe
            autohotpie-tauri/src-tauri/target/**/*.zip

  build-macos:
    runs-on: macos-latest

    env:
      CARGO_TERM_COLOR: always
      RUST_BACKTRACE: 1
      TAURI_SKIP_UPDATE_CHECK: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: autohotpie-tauri/package-lock.json

      - name: Setup Rust
        run: |
          rustup update stable --no-self-update
          rustup default stable
          rustup component add clippy rustfmt

      - name: Install frontend deps
        working-directory: autohotpie-tauri
        run: npm ci

      - name: Build UI
        working-directory: autohotpie-tauri
        run: npm run build

      - name: Build Tauri bundle (macOS)
        working-directory: autohotpie-tauri
        run: npm run tauri build

      - name: Smoke test bundle
        working-directory: autohotpie-tauri
        run: npx tauri info

      - name: Upload artifacts
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: tauri-macos
          path: |
            autohotpie-tauri/src-tauri/target/**/*.dmg
            autohotpie-tauri/src-tauri/target/**/*.app

  build-linux:
    runs-on: ubuntu-latest

    env:
      CARGO_TERM_COLOR: always
      RUST_BACKTRACE: 1
      TAURI_SKIP_UPDATE_CHECK: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: autohotpie-tauri/package-lock.json

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1 libayatana-appindicator3-dev librsvg2-dev patchelf

      - name: Setup Rust
        run: |
          rustup update stable --no-self-update
          rustup default stable
          rustup component add clippy rustfmt

      - name: Install frontend deps
        working-directory: autohotpie-tauri
        run: npm ci

      - name: Build UI
        working-directory: autohotpie-tauri
        run: npm run build

      - name: Build Tauri bundle (Linux)
        working-directory: autohotpie-tauri
        run: npm run tauri build -- --target x86_64-unknown-linux-gnu

      - name: Smoke test bundle
        working-directory: autohotpie-tauri
        run: npx tauri info

      - name: Upload artifacts
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: tauri-linux
          path: |
            autohotpie-tauri/src-tauri/target/**/*.AppImage
            autohotpie-tauri/src-tauri/target/**/*.deb
            autohotpie-tauri/src-tauri/target/**/*.rpm